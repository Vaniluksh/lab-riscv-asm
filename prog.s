.data
N:
.word 3
M:
.word 4
matrix:
.word 1, -2, 3
.word -4, 5, -6
.word 7, -8, 9
result:
.word 0

.text
main:
    la a2, N
    lw t1, 0(a2)   # Загружаем значение N (количество строк)
    
    la a3, M
    lw t2, 0(a3)   # Загружаем значение M (количество столбцов)

    la a4, matrix   # Загружаем адрес начала матрицы
    la a5, result   # Загружаем адрес для сохранения результата суммы
    
    addi t4, x0, 0  # Устанавливаем начальное значение индекса строки
    addi t5, x0, 0  # Устанавливаем начальное значение суммы положительных чисел
    
    init:
        addi t3, x0, 0  # Устанавливаем начальное значение индекса столбца
        
        cycle:
            lw t6, 0(a4)  # Загружаем значение из текущей ячейки матрицы
            addi a4, a4, 4  # Увеличиваем адрес на 4 байта (переход к следующей ячейке)
            
            blt t6, x0, continue  # Если значение отрицательное или ноль, переходим к следующему столбцу
            
            add t5, t5, t6  # Добавляем положительное значение к сумме положительных чисел
            
            continue:
                addi t3, t3, 1  # Увеличиваем индекс столбца на 1
                blt t3, t2, cycle  # Если не дошли до конца строки, продолжаем цикл
                
        addi t4, t4, 1  # Увеличиваем индекс строки на 1
        blt t4, t1, init  # Если не дошли до конца массива, продолжаем цикл
        
    # Сохраняем сумму положительных чисел в результирующем массиве
    sw t5, 0(a5)
    
    # Вывод результата
    la a2, result
    la a3, result
    call print
    

print:
    lw t1, 0(a2)     # Загрузка значения из адреса a2 (количество элементов)

    addi t2, x0, 0   # Инициализация счетчика для цикла

    print_cycle:
        lw a1, 0(a3)     # Загрузка значения из адреса a3

        addi a0, x0, 1   # Вызов системного вызова для вывода значения
        ecall

        addi a0, x0, 11  # Вызов системного вызова для вывода символа пробела
        addi a1, x0, 32
        ecall

        addi t2, t2, 1   # Увеличение счетчика

        addi a3, a3, 4   # Увеличение адреса a3 на 4 байта (переход к следующему элементу)

        blt t2, t1, print_cycle  # Проверка условия окончания цикла

    exit:
        addi a0, x0, 10  # Вызов системного вызова для выхода из программы
        ecall